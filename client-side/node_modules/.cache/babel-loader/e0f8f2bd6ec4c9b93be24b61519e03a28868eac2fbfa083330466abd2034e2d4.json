{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{errorToast,isEmpty,successToast}from'../../Helper/ValidationHelper';import{ReadByID,Update}from'../../APIServices/CRUDServices';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UpdateForm=props=>{// Define refs for input elements\nconst productNameRef=useRef();const productCodeRef=useRef();const imgRef=useRef();const unitPriceRef=useRef();const qtyRef=useRef();const totalPriceRef=useRef();const[formData,setFormData]=useState({ProductName:'',ProductCode:'',Img:'',UnitPrice:'',Qty:'',TotalPrice:''});// State to store form data\nconst UpdateData=async()=>{// Extract values from refs\nconst productName=productNameRef.current.value;const productCode=productCodeRef.current.value;const img=imgRef.current.value;const unitPrice=unitPriceRef.current.value;const qty=qtyRef.current.value;const totalPrice=totalPriceRef.current.value;// Validate input values\nif(isEmpty(productName)||isEmpty(productCode)||isEmpty(img)||isEmpty(unitPrice)||isEmpty(qty)||isEmpty(totalPrice)){errorToast(\"All fields are required\");return;}try{// Call the Update function with correct parameters\nconst result=await Update(props.id,productName,productCode,img,unitPrice,qty,totalPrice);if(result===0){errorToast(\"Request failed, please try again\");}else{successToast(\"Data updated successfully\");// Clear form fields\nproductNameRef.current.value=\"\";productCodeRef.current.value=\"\";imgRef.current.value=\"\";unitPriceRef.current.value=\"\";qtyRef.current.value=\"\";totalPriceRef.current.value=\"\";}}catch(error){console.error(\"Error:\",error);errorToast(\"An error occurred while updating data\");}};useEffect(()=>{const fetchData=async()=>{try{// Fetch data by ID\nconst result=await ReadByID(props.id);setFormData(result);// Update form fields with fetched data\nif(result&&result.length>0){productNameRef.current.value=result[0]['ProductName'];productCodeRef.current.value=result[0]['ProductCode'];imgRef.current.value=result[0]['Img'];unitPriceRef.current.value=result[0]['UnitPrice'];qtyRef.current.value=result[0]['Qty'];totalPriceRef.current.value=result[0]['TotalPrice'];}else{// Handle case when no data is found for the given ID\nconsole.error('No data found for ID:',props.id);}}catch(error){console.error('Error fetching data:',error);}};fetchData();// Call fetchData function\n},[props.id]);// Include props.id in the dependency array\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-4 p-2\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Product Name\"}),/*#__PURE__*/_jsx(\"input\",{ref:productNameRef,type:\"text\",className:\"form-control\",defaultValue:formData.ProductName})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-4 p-2\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Product Code\"}),/*#__PURE__*/_jsx(\"input\",{ref:productCodeRef,type:\"text\",className:\"form-control\",defaultValue:formData.ProductCode})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-4 p-2\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Product Img\"}),/*#__PURE__*/_jsx(\"input\",{ref:imgRef,type:\"text\",className:\"form-control\",defaultValue:formData.Img})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-4 p-2\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unit Price\"}),/*#__PURE__*/_jsx(\"input\",{ref:unitPriceRef,type:\"text\",className:\"form-control\",defaultValue:formData.UnitPrice})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-4 p-2\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Qty\"}),/*#__PURE__*/_jsx(\"input\",{ref:qtyRef,type:\"text\",className:\"form-control\",defaultValue:formData.Qty})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-4 p-2\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Total Price\"}),/*#__PURE__*/_jsx(\"input\",{ref:totalPriceRef,type:\"text\",className:\"form-control\",defaultValue:formData.TotalPrice})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4 p-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:UpdateData,className:\"btn btn-primary w-100\",children:\"Save\"})})})]});};export default UpdateForm;","map":{"version":3,"names":["React","useEffect","useRef","useState","errorToast","isEmpty","successToast","ReadByID","Update","jsx","_jsx","jsxs","_jsxs","UpdateForm","props","productNameRef","productCodeRef","imgRef","unitPriceRef","qtyRef","totalPriceRef","formData","setFormData","ProductName","ProductCode","Img","UnitPrice","Qty","TotalPrice","UpdateData","productName","current","value","productCode","img","unitPrice","qty","totalPrice","result","id","error","console","fetchData","length","className","children","ref","type","defaultValue","onClick"],"sources":["H:/My prac/ostad project 2/client-side/src/Components/Update/UpdateForm.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { errorToast, isEmpty, successToast } from '../../Helper/ValidationHelper';\r\nimport { ReadByID, Update } from '../../APIServices/CRUDServices';\r\n\r\nconst UpdateForm = (props) => {\r\n    // Define refs for input elements\r\n    const productNameRef = useRef();\r\n    const productCodeRef = useRef();\r\n    const imgRef = useRef();\r\n    const unitPriceRef = useRef();\r\n    const qtyRef = useRef();\r\n    const totalPriceRef = useRef();\r\n    const [formData, setFormData] = useState({ ProductName:'', ProductCode: '', Img: '', UnitPrice: '', Qty: '', TotalPrice: '' });\r\n // State to store form data\r\n\r\n    const UpdateData = async () => {\r\n        // Extract values from refs\r\n        const productName = productNameRef.current.value;\r\nconst productCode = productCodeRef.current.value;\r\nconst img = imgRef.current.value;\r\nconst unitPrice = unitPriceRef.current.value;\r\nconst qty = qtyRef.current.value;\r\nconst totalPrice = totalPriceRef.current.value;\r\n\r\n\r\n        // Validate input values\r\n        if (isEmpty(productName) || isEmpty(productCode) || isEmpty(img) || isEmpty(unitPrice) || isEmpty(qty) || isEmpty(totalPrice)) {\r\n            errorToast(\"All fields are required\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Call the Update function with correct parameters\r\n            \r\n            const result = await Update(props.id, productName, productCode, img, unitPrice, qty, totalPrice);\r\n            if (result === 0) {\r\n                errorToast(\"Request failed, please try again\");\r\n            } else {\r\n                successToast(\"Data updated successfully\");\r\n                // Clear form fields\r\n                productNameRef.current.value = \"\";\r\n                productCodeRef.current.value = \"\";\r\n                imgRef.current.value = \"\";\r\n                unitPriceRef.current.value = \"\";\r\n                qtyRef.current.value = \"\";\r\n                totalPriceRef.current.value = \"\";\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            errorToast(\"An error occurred while updating data\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                // Fetch data by ID\r\n                const result = await ReadByID(props.id);\r\n                   setFormData(result);\r\n                // Update form fields with fetched data\r\n                if (result && result.length > 0) {\r\n                    productNameRef.current.value = result[0]['ProductName'];\r\n                    productCodeRef.current.value = result[0]['ProductCode'];\r\n                    imgRef.current.value = result[0]['Img'];\r\n                    unitPriceRef.current.value = result[0]['UnitPrice'];\r\n                    qtyRef.current.value = result[0]['Qty'];\r\n                    totalPriceRef.current.value = result[0]['TotalPrice'];\r\n                } else {\r\n                    // Handle case when no data is found for the given ID\r\n                    console.error('No data found for ID:', props.id);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n    \r\n        fetchData(); // Call fetchData function\r\n    }, [props.id]); // Include props.id in the dependency array\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <div className='container'>\r\n            {/* Input fields for product details */}\r\n            <div className='row'>\r\n                {/* Product Name */}\r\n                <div className='col-md-4 p-2'>\r\n                    <label>Product Name</label>\r\n                    <input ref={productNameRef} type='text' className='form-control' defaultValue={formData.ProductName} />\r\n                </div>\r\n                {/* Product Code */}\r\n                <div className='col-md-4 p-2'>\r\n                    <label>Product Code</label>\r\n                    <input ref={productCodeRef} type='text' className='form-control' defaultValue={formData.ProductCode} />\r\n                </div>\r\n                {/* Product Img */}\r\n                <div className='col-md-4 p-2'>\r\n                    <label>Product Img</label>\r\n                    <input ref={imgRef} type='text' className='form-control' defaultValue={formData.Img} />\r\n                </div>\r\n                {/* Unit Price */}\r\n                <div className='col-md-4 p-2'>\r\n                    <label>Unit Price</label>\r\n                    <input ref={unitPriceRef} type='text' className='form-control' defaultValue={formData.UnitPrice} />\r\n                </div>\r\n                {/* Qty */}\r\n                <div className='col-md-4 p-2'>\r\n                    <label>Qty</label>\r\n                    <input ref={qtyRef} type='text' className='form-control' defaultValue={formData.Qty} />\r\n                </div>\r\n                {/* Total Price */}\r\n                <div className='col-md-4 p-2'>\r\n                    <label>Total Price</label>\r\n                    <input ref={totalPriceRef} type='text' className='form-control' defaultValue={formData.TotalPrice} />\r\n                </div>\r\n            </div>\r\n            <br />\r\n            {/* Save button */}\r\n            <div className='row'>\r\n                <div className='col-md-4 p-2'>\r\n                    <button onClick={UpdateData} className='btn btn-primary w-100'>Save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}